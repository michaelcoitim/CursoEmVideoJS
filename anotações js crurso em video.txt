anotações js crurso em video

mosilla criou o js 
sem limitações 

.exit
<script>
        window.alert('Acarda para vida') // sem a necessidade de um';'
    </script>


    data types 

numer
	infinity
	NaN
string (letras)
boolean (v ou f)
nuul
undefined
object
	array


aula 6

	trasforamando String em numeros 

	Number.parseInt(n) ou parceint(n)
	Number.parseFloat(n)
	--simblificando
	Number(n)


outro tipo de conveção 
String(n)
n.toString
========================================
formatando strings 
var s='java script'
'Eu estou aprendendo s' // não faz interpolação

'eu estou aprendendo'+s // usa concatenação

geito novo temple string (deve ser utiliado a grase para funcionar)

`eu estou aprendendo ${s}` // exemplo de template string

outras funções 

s.length -> tamanho da string (qntas lentras tem)
s.toUppperCase() -> tudo maisculo
s.toLowerCase() -> tudo minusculas
==========================================
formatação de numeros
var n1 = 1545.5
n1.toFixed(2) -> fica com 2 casas decimais
n1.toFixed(2).replace('.',',')-> trocando '.'(ponto) por ','(virgula)
n1.toLocaleString('pt-BR',{style:'currency',currency:'BRL'}) -> formata usando moeda Brasil

currency:'BRL '-> moeda Brasil
currency:'USD' -> moeda USA
currency:'EUR' -> moeda europeia
=============================
operadores 
soma +
subitração -
multiplicação *
divição /
mod %
potencia ** exe: 5 ** 2 =25
============================
repeitar a orddem de precedência 
1 () parentes 
2 ** potencia 
3 *,/,% 
4 + , _ 
==================
auto atribuição simplificada 
var n = 3

n = n + 4  -> n += 4
n = n - 5  -> n -= 5
n = n * 4  -> n *= 4
n = n / 2  -> n /= 2
n = n **2  -> n **= 2
n = n % 5  -> n  %= 5
====================================
operadores relacionais 
< menor
> maior
<= menor igual
>= maior igual
== igual 
=== identico (alem de igual tem que ser do mesmo tipo) identidade
==! diferente restristo 
=! diferente
====================================
operadores logicos
! negação
&& conjunção (and, e)
|| dijunção (or, ou )

precedencia 
1 não 
2 e 
3 ou 
====================================
operador ternario
?:

teste ? true : false 
ex 
média>=7.0 ? "aprovado : "reprovado"
========================
aula 09 DOM
document object model 
conjunto de objetos no navegador
dom -> Facilita o acesso  aos objetos do nevegador para o js

arvore dom 

raiz = window (janela){
	location, document, history;
}
window->document->html->head , body
repreentação foto (Arevore DOM)

window.alert(p1.innerText)// mosta um alerta sem as formatações
window.alert(p1.innerHTML)// mosta uma alerta com as fomatações html

seletor 
clase = .
id = #
=====================================
aula 10 Eventos DOM
 ver -> mdn Event reference https://developer.mozilla.org/pt-BR/docs/Web/Events
 https://developer.mozilla.org/pt-BR/docs/Web/JavaScript

 funçoes -> conjunto de codigos que sera execultado somente quando o evento ocorrer
 =======================================
 aula 11 condições 

 condição simples -> só execulta o bloco de codigo se a condição for verdadeira.

 condição composta -> execulta mais de um bloco de codigo,

indentação = recuo= organizar codigo codigo
=============================================================
aula 12 condições alinhadas 

são condições compostas uma dentro da outra.

condições multiplas-> onde pode ter algumas condições, e para cada condição existe uma valor fixo
não esqueser o break  "sair" de cada bloco 
===================================
maior dificuldade nos exercicios-> tratamento das fotos , buscar os valores do radio no js
passar imagem para o html 
===============================
modulo f aula 15
variaveis conpostas -> pode guardar mais de um valor 
ex array vetor
variavel composta é uma variavel com varios elementos, cada elemento tem um valor e uma chave de identificação
for in maneira sinplificada de percorrer vetores 
para cada x in (dentro) de array b faça  

indexOf busca valores no array  retornando a posição, ou o indice do valor
==============================================================
aula 16 
funções: são ações execultadas assim que chamadas, ou en decorrência de algum evento 
podendo receber parâmetros e retornar um resltado